{"ast":null,"code":"var _jsxFileName = \"D:\\\\Descargas\\\\crmcliente\\\\crmcliente\\\\pages\\\\nuevopedido.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport AsignarCliente from \"../components/pedidos/AsignarCliente\";\nimport AsignarProductos from \"../components/pedidos/AsignarProductos\";\nimport ResumenPedido from \"../components/pedidos/ResumenPedido\";\nimport Total from \"../components/pedidos/Total\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport PedidoContext from \"../context/pedidos/PedidoContext\";\nconst NUEVO_PEDIDO = gql`\n  mutation nuevoPedido($input: PedidoInput) {\n    nuevoPedido(input: $input) {\n      id\n    }\n  }\n`;\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n    obtenerPedidosVendedor {\n      id\n      pedido {\n        id\n        cantidad\n        nombre\n      }\n      cliente {\n        id\n        nombre\n        apellido\n        email\n        telefono\n      }\n      vendedor\n      total\n      estado\n    }\n  }\n`;\n\nconst NuevoPedido = () => {\n  const router = useRouter();\n  const {\n    0: mensaje,\n    1: setMensaje\n  } = useState(null);\n  const pedidoContext = useContext(PedidoContext);\n  const {\n    cliente,\n    productos,\n    total\n  } = pedidoContext;\n  const [nuevoPedido] = useMutation(NUEVO_PEDIDO, {\n    update(cache, {\n      data: {\n        nuevoPedido\n      }\n    }) {\n      const {\n        obtenerPedidosVendedor\n      } = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      });\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: [...obtenerPedidosVendedor, nuevoPedido]\n        }\n      });\n    }\n\n  });\n\n  const validarPedido = () => {\n    return !productos.every(producto => producto.cantidad > 0) || total === 0 || cliente.length === 0 ? \" opacity-50 cursor-not-allowed \" : \"\";\n  };\n\n  const crearNuevoPedido = async () => {\n    const {\n      id\n    } = cliente;\n    const pedido = productos.map((_ref) => {\n      let {\n        __typename,\n        existencia\n      } = _ref,\n          producto = _objectWithoutProperties(_ref, [\"__typename\", \"existencia\"]);\n\n      return producto;\n    });\n\n    try {\n      const {\n        data\n      } = await nuevoPedido({\n        variables: {\n          input: {\n            cliente: id,\n            total,\n            pedido\n          }\n        }\n      });\n      router.push(\"/pedidos\");\n      Swal.fire(\"Correcto\", \"El pedido se registrÃ³ correctamente\", \"success\");\n    } catch (error) {\n      setMensaje(error.message.replace(\"GraphQL error: \", \"\"));\n      setTimeout(() => {\n        setMensaje(null);\n      }, 3000);\n    }\n  };\n\n  const mostrarMensaje = () => {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, mensaje, \" \"));\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"Crear Nuevo Pedido\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(AsignarCliente, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), __jsx(AsignarProductos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), __jsx(ResumenPedido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), __jsx(Total, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: ` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `,\n    onClick: () => crearNuevoPedido(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Registrar Pedido\"))));\n};\n\nexport default NuevoPedido;","map":{"version":3,"sources":["D:/Descargas/crmcliente/crmcliente/pages/nuevopedido.js"],"names":["React","useContext","useState","Layout","AsignarCliente","AsignarProductos","ResumenPedido","Total","gql","useMutation","useRouter","Swal","PedidoContext","NUEVO_PEDIDO","OBTENER_PEDIDOS","NuevoPedido","router","mensaje","setMensaje","pedidoContext","cliente","productos","total","nuevoPedido","update","cache","data","obtenerPedidosVendedor","readQuery","query","writeQuery","validarPedido","every","producto","cantidad","length","crearNuevoPedido","id","pedido","map","__typename","existencia","variables","input","push","fire","error","message","replace","setTimeout","mostrarMensaje"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport AsignarCliente from \"../components/pedidos/AsignarCliente\";\nimport AsignarProductos from \"../components/pedidos/AsignarProductos\";\nimport ResumenPedido from \"../components/pedidos/ResumenPedido\";\nimport Total from \"../components/pedidos/Total\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Swal from \"sweetalert2\";\n\nimport PedidoContext from \"../context/pedidos/PedidoContext\";\n\nconst NUEVO_PEDIDO = gql`\n  mutation nuevoPedido($input: PedidoInput) {\n    nuevoPedido(input: $input) {\n      id\n    }\n  }\n`;\n\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n    obtenerPedidosVendedor {\n      id\n      pedido {\n        id\n        cantidad\n        nombre\n      }\n      cliente {\n        id\n        nombre\n        apellido\n        email\n        telefono\n      }\n      vendedor\n      total\n      estado\n    }\n  }\n`;\n\nconst NuevoPedido = () => {\n  const router = useRouter();\n\n  const [mensaje, setMensaje] = useState(null);\n\n  const pedidoContext = useContext(PedidoContext);\n  const { cliente, productos, total } = pedidoContext;\n\n  const [nuevoPedido] = useMutation(NUEVO_PEDIDO, {\n    update(cache, { data: { nuevoPedido } }) {\n      const { obtenerPedidosVendedor } = cache.readQuery({\n        query: OBTENER_PEDIDOS,\n      });\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: [...obtenerPedidosVendedor, nuevoPedido],\n        },\n      });\n    },\n  });\n\n  const validarPedido = () => {\n    return !productos.every((producto) => producto.cantidad > 0) ||\n      total === 0 ||\n      cliente.length === 0\n      ? \" opacity-50 cursor-not-allowed \"\n      : \"\";\n  };\n\n  const crearNuevoPedido = async () => {\n    const { id } = cliente;\n    const pedido = productos.map(\n      ({ __typename, existencia, ...producto }) => producto\n    );\n\n    try {\n      const { data } = await nuevoPedido({\n        variables: {\n          input: {\n            cliente: id,\n            total,\n            pedido,\n          },\n        },\n      });\n\n      router.push(\"/pedidos\");\n\n      Swal.fire(\"Correcto\", \"El pedido se registrÃ³ correctamente\", \"success\");\n    } catch (error) {\n      setMensaje(error.message.replace(\"GraphQL error: \", \"\"));\n\n      setTimeout(() => {\n        setMensaje(null);\n      }, 3000);\n    }\n  };\n\n  const mostrarMensaje = () => {\n    return (\n      <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto \">\n        <p>{mensaje} </p>\n      </div>\n    );\n  };\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">Crear Nuevo Pedido</h1>\n\n      {mensaje && mostrarMensaje()}\n\n      <div className=\"flex justify-center mt-5\">\n        <div className=\"w-full max-w-lg\">\n          <AsignarCliente />\n          <AsignarProductos />\n          <ResumenPedido />\n          <Total />\n\n          <button\n            type=\"button\"\n            className={` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `}\n            onClick={() => crearNuevoPedido()}\n          >\n            Registrar Pedido\n          </button>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default NuevoPedido;\n"]},"metadata":{},"sourceType":"module"}