{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Descargas\\\\crmcliente\\\\crmcliente\\\\components\\\\pedidos\\\\AsignarProductos.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerProductos {\\n    obtenerProductos {\\n      id\\n      nombre\\n      precio\\n      existencia\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Select from \"react-select\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport PedidoContext from \"../../context/pedidos/PedidoContext\";\nvar OBTENER_PRODUCTOS = gql(_templateObject());\n\nvar AsignarProductos = function AsignarProductos() {\n  var _useState = useState([]),\n      productos = _useState[0],\n      setProductos = _useState[1];\n\n  var pedidoContext = useContext(PedidoContext);\n  var agregarProducto = pedidoContext.agregarProducto;\n\n  var _useQuery = useQuery(OBTENER_PRODUCTOS),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  useEffect(function () {\n    agregarProducto(productos);\n  }, [productos]);\n\n  var seleccionarProducto = function seleccionarProducto(producto) {\n    setProductos(producto);\n  };\n\n  if (loading) return null;\n  var obtenerProductos = data.obtenerProductos;\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"2.- Selecciona o busca los productos\"), __jsx(Select, {\n    className: \"mt-3\",\n    options: obtenerProductos,\n    onChange: function onChange(opcion) {\n      return seleccionarProducto(opcion);\n    },\n    isMulti: true,\n    getOptionValue: function getOptionValue(opciones) {\n      return opciones.id;\n    },\n    getOptionLabel: function getOptionLabel(opciones) {\n      return \"\".concat(opciones.nombre, \" - \").concat(opciones.existencia, \" Disponibles\");\n    },\n    placeholder: \"Busque o Seleccione el Producto\",\n    noOptionsMessage: function noOptionsMessage() {\n      return \"No hay resultados\";\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AsignarProductos;","map":{"version":3,"sources":["D:/Descargas/crmcliente/crmcliente/components/pedidos/AsignarProductos.js"],"names":["React","useEffect","useState","useContext","Select","gql","useQuery","PedidoContext","OBTENER_PRODUCTOS","AsignarProductos","productos","setProductos","pedidoContext","agregarProducto","data","loading","error","seleccionarProducto","producto","obtenerProductos","opcion","opciones","id","nombre","existencia"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;;AAWA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACKP,QAAQ,CAAC,EAAD,CADb;AAAA,MACtBQ,SADsB;AAAA,MACXC,YADW;;AAG7B,MAAMC,aAAa,GAAGT,UAAU,CAACI,aAAD,CAAhC;AAH6B,MAIrBM,eAJqB,GAIDD,aAJC,CAIrBC,eAJqB;;AAAA,kBAMIP,QAAQ,CAACE,iBAAD,CANZ;AAAA,MAMrBM,IANqB,aAMrBA,IANqB;AAAA,MAMfC,OANe,aAMfA,OANe;AAAA,MAMNC,KANM,aAMNA,KANM;;AAQ7Bf,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,eAAe,CAACH,SAAD,CAAf;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;;AAIA,MAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD,EAAc;AACxCP,IAAAA,YAAY,CAACO,QAAD,CAAZ;AACD,GAFD;;AAIA,MAAIH,OAAJ,EAAa,OAAO,IAAP;AAhBgB,MAiBrBI,gBAjBqB,GAiBAL,IAjBA,CAiBrBK,gBAjBqB;AAmB7B,SACE,4BACE;AAAG,IAAA,SAAS,EAAC,oFAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAIE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAEA,gBAFX;AAGE,IAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,aAAYH,mBAAmB,CAACG,MAAD,CAA/B;AAAA,KAHZ;AAIE,IAAA,OAAO,EAAE,IAJX;AAKE,IAAA,cAAc,EAAE,wBAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,EAAvB;AAAA,KALlB;AAME,IAAA,cAAc,EAAE,wBAACD,QAAD;AAAA,uBACXA,QAAQ,CAACE,MADE,gBACUF,QAAQ,CAACG,UADnB;AAAA,KANlB;AASE,IAAA,WAAW,EAAC,iCATd;AAUE,IAAA,gBAAgB,EAAE;AAAA,aAAM,mBAAN;AAAA,KAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAmBD,CAtCD;;AAwCA,eAAef,gBAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport Select from \"react-select\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport PedidoContext from \"../../context/pedidos/PedidoContext\";\n\nconst OBTENER_PRODUCTOS = gql`\n  query obtenerProductos {\n    obtenerProductos {\n      id\n      nombre\n      precio\n      existencia\n    }\n  }\n`;\n\nconst AsignarProductos = () => {\n  const [productos, setProductos] = useState([]);\n\n  const pedidoContext = useContext(PedidoContext);\n  const { agregarProducto } = pedidoContext;\n\n  const { data, loading, error } = useQuery(OBTENER_PRODUCTOS);\n\n  useEffect(() => {\n    agregarProducto(productos);\n  }, [productos]);\n\n  const seleccionarProducto = (producto) => {\n    setProductos(producto);\n  };\n\n  if (loading) return null;\n  const { obtenerProductos } = data;\n\n  return (\n    <>\n      <p className=\"mt-10 my-2 bg-white border-l-4 border-gray-800 text-gray-700 p-2 text-sm font-bold\">\n        2.- Selecciona o busca los productos\n      </p>\n      <Select\n        className=\"mt-3\"\n        options={obtenerProductos}\n        onChange={(opcion) => seleccionarProducto(opcion)}\n        isMulti={true}\n        getOptionValue={(opciones) => opciones.id}\n        getOptionLabel={(opciones) =>\n          `${opciones.nombre} - ${opciones.existencia} Disponibles`\n        }\n        placeholder=\"Busque o Seleccione el Producto\"\n        noOptionsMessage={() => \"No hay resultados\"}\n      />\n    </>\n  );\n};\n\nexport default AsignarProductos;\n"]},"metadata":{},"sourceType":"module"}