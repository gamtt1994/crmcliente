{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Descargas\\\\Crmcliente\\\\Crmcliente\\\\pages\\\\nuevoproducto.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerProductos {\\n    obtenerProductos {\\n      id\\n      nombre\\n      precio\\n      existencia\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation nuevoProducto($input: ProductoInput) {\\n    nuevoProducto(input: $input) {\\n      id\\n      nombre\\n      existencia\\n      precio\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Swal from \"sweetalert2\";\nimport { useRouter } from \"next/router\";\nvar NUEVO_PRODUCTO = gql(_templateObject());\nvar OBTENER_PRODUCTOS = gql(_templateObject2());\n\nvar NuevoProducto = function NuevoProducto() {\n  var router = useRouter();\n\n  var _useMutation = useMutation(NUEVO_PRODUCTO, {\n    update: function update(cache, _ref) {\n      var nuevoProducto = _ref.data.nuevoProducto;\n\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PRODUCTOS\n      }),\n          obtenerProductos = _cache$readQuery.obtenerProductos;\n\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [].concat(_toConsumableArray(obtenerProductos), [nuevoProducto])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoProducto = _useMutation2[0];\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: \"\",\n      existencia: \"\",\n      precio: \"\"\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required(\"El nombre del producto es obligatorio\"),\n      existencia: Yup.number().required(\"Agrega la cantidad disponible\").positive(\"No se aceptan números negativos\").integer(\"La existencia deben ser números enteros\"),\n      precio: Yup.number().required(\"El precio es obligatorio\").positive(\"No se aceptan números negativos\")\n    }),\n    onSubmit: function onSubmit(valores) {\n      var nombre, existencia, precio, _await$nuevoProducto, data;\n\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              nombre = valores.nombre, existencia = valores.existencia, precio = valores.precio;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(nuevoProducto({\n                variables: {\n                  input: {\n                    nombre: nombre,\n                    existencia: existencia,\n                    precio: precio\n                  }\n                }\n              }));\n\n            case 4:\n              _await$nuevoProducto = _context.sent;\n              data = _await$nuevoProducto.data;\n              Swal.fire(\"Creado\", \"Se creó el producto correctamente\", \"success\");\n              router.push(\"/productos\");\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 10]], Promise);\n    }\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Crear Nuevo Producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"existencia\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Cantidad Disponible\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"existencia\",\n    type: \"number\",\n    placeholder: \"Cantidad Disponible\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.existencia,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  })), formik.touched.existencia && formik.errors.existencia ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, formik.errors.existencia)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"precio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Precio\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"precio\",\n    type: \"number\",\n    placeholder: \"Precio Producto\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.precio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  })), formik.touched.precio && formik.errors.precio ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, formik.errors.precio)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Agregar Nuevo Producto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default NuevoProducto;","map":{"version":3,"sources":["D:/Descargas/Crmcliente/Crmcliente/pages/nuevoproducto.js"],"names":["React","Layout","useFormik","Yup","gql","useMutation","Swal","useRouter","NUEVO_PRODUCTO","OBTENER_PRODUCTOS","NuevoProducto","router","update","cache","nuevoProducto","data","readQuery","query","obtenerProductos","writeQuery","formik","initialValues","nombre","existencia","precio","validationSchema","object","string","required","number","positive","integer","onSubmit","valores","variables","input","fire","push","console","log","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Swal from \"sweetalert2\";\nimport { useRouter } from \"next/router\";\n\nconst NUEVO_PRODUCTO = gql`\n  mutation nuevoProducto($input: ProductoInput) {\n    nuevoProducto(input: $input) {\n      id\n      nombre\n      existencia\n      precio\n    }\n  }\n`;\n\nconst OBTENER_PRODUCTOS = gql`\n  query obtenerProductos {\n    obtenerProductos {\n      id\n      nombre\n      precio\n      existencia\n    }\n  }\n`;\n\nconst NuevoProducto = () => {\n  const router = useRouter();\n\n  const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\n    update(cache, { data: { nuevoProducto } }) {\n      const { obtenerProductos } = cache.readQuery({\n        query: OBTENER_PRODUCTOS,\n      });\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [...obtenerProductos, nuevoProducto],\n        },\n      });\n    },\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      nombre: \"\",\n      existencia: \"\",\n      precio: \"\",\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required(\"El nombre del producto es obligatorio\"),\n      existencia: Yup.number()\n        .required(\"Agrega la cantidad disponible\")\n        .positive(\"No se aceptan números negativos\")\n        .integer(\"La existencia deben ser números enteros\"),\n      precio: Yup.number()\n        .required(\"El precio es obligatorio\")\n        .positive(\"No se aceptan números negativos\"),\n    }),\n    onSubmit: async (valores) => {\n      const { nombre, existencia, precio } = valores;\n\n      try {\n        const { data } = await nuevoProducto({\n          variables: {\n            input: {\n              nombre,\n              existencia,\n              precio,\n            },\n          },\n        });\n        Swal.fire(\"Creado\", \"Se creó el producto correctamente\", \"success\");\n        router.push(\"/productos\");\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  });\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">\n        Crear Nuevo Producto\n      </h1>\n\n      <div className=\"flex justify-center mt-5\">\n        <div className=\"w-full max-w-lg\">\n          <form\n            className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n            onSubmit={formik.handleSubmit}\n          >\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"nombre\"\n              >\n                Nombre\n              </label>\n\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"nombre\"\n                type=\"text\"\n                placeholder=\"Nombre Producto\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.nombre}\n              />\n            </div>\n\n            {formik.touched.nombre && formik.errors.nombre ? (\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                <p className=\"font-bold\">Error</p>\n                <p>{formik.errors.nombre}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"existencia\"\n              >\n                Cantidad Disponible\n              </label>\n\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"existencia\"\n                type=\"number\"\n                placeholder=\"Cantidad Disponible\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.existencia}\n              />\n            </div>\n\n            {formik.touched.existencia && formik.errors.existencia ? (\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                <p className=\"font-bold\">Error</p>\n                <p>{formik.errors.existencia}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"precio\"\n              >\n                Precio\n              </label>\n\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"precio\"\n                type=\"number\"\n                placeholder=\"Precio Producto\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.precio}\n              />\n            </div>\n\n            {formik.touched.precio && formik.errors.precio ? (\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                <p className=\"font-bold\">Error</p>\n                <p>{formik.errors.precio}</p>\n              </div>\n            ) : null}\n\n            <input\n              type=\"submit\"\n              className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n              value=\"Agregar Nuevo Producto\"\n            />\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default NuevoProducto;\n"]},"metadata":{},"sourceType":"module"}