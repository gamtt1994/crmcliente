{"ast":null,"code":"var _jsxFileName = \"D:\\\\Descargas\\\\Crmcliente\\\\Crmcliente\\\\pages\\\\editarproducto\\\\[pid].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nconst OBTENER_PRODUCTO = gql`\n  query obtenerProducto($id: ID!) {\n    obtenerProducto(id: $id) {\n      nombre\n      precio\n      existencia\n    }\n  }\n`;\nconst ACTUALIZAR_PRODUCTO = gql`\n  mutation actualizarProducto($id: ID!, $input: ProductoInput) {\n    actualizarProducto(id: $id, input: $input) {\n      id\n      nombre\n      existencia\n      precio\n    }\n  }\n`;\n\nconst EditarProducto = () => {\n  const router = useRouter();\n  const {\n    query: {\n      id\n    }\n  } = router;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_PRODUCTO, {\n    variables: {\n      id\n    }\n  });\n  const [actualizarProducto] = useMutation(ACTUALIZAR_PRODUCTO);\n  const schemaValidacion = Yup.object({\n    nombre: Yup.string().required(\"El nombre del producto es obligatorio\"),\n    existencia: Yup.number().required(\"Agrega la cantidad disponible\").positive(\"No se aceptan números negativos\").integer(\"La existencia deben ser números enteros\"),\n    precio: Yup.number().required(\"El precio es obligatorio\").positive(\"No se aceptan números negativos\")\n  });\n\n  if (loading) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      className: \"text-2xl text-gray-800 font-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Editar Producto\"), __jsx(\"div\", {\n      className: \" animate-pulse  flex justify-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"w-full max-w-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(\"form\", {\n      className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Nombre\"), __jsx(\"input\", {\n      className: \"h-4 bg-gray-400 rounded w-4/6 m-5shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"nombre\",\n      type: \"text\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"cantidad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Cantidad Disponible\"), __jsx(\"input\", {\n      className: \"h-4 bg-gray-400 rounded w-4/6 m-5shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"cantidad\",\n      type: \"number\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"empresa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Precio\"), __jsx(\"input\", {\n      className: \"h-4 bg-gray-400 rounded w-4/6 m-5shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"empresa\",\n      type: \"text\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }))), \"\\xA0\")));\n  }\n\n  if (!data) {\n    return \"Acción no permitida\";\n  }\n\n  const actualizarInfoProducto = async valores => {\n    const {\n      nombre,\n      existencia,\n      precio\n    } = valores;\n\n    try {\n      const {\n        data\n      } = await actualizarProducto({\n        variables: {\n          id,\n          input: {\n            nombre,\n            existencia,\n            precio\n          }\n        }\n      });\n      router.push(\"/productos\");\n      Swal.fire(\"Correcto\", \"El producto se actualizó correctamente\", \"success\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const {\n    obtenerProducto\n  } = data;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"Editar Producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    enableReinitialize: true,\n    initialValues: obtenerProducto,\n    validationSchema: schemaValidacion,\n    onSubmit: valores => {\n      actualizarInfoProducto(valores);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, props => {\n    return __jsx(\"form\", {\n      className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Nombre\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"nombre\",\n      type: \"text\",\n      placeholder: \"Nombre Producto\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.nombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    })), props.touched.nombre && props.errors.nombre ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, props.errors.nombre)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"existencia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \"Cantidad Disponible\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"existencia\",\n      type: \"number\",\n      placeholder: \"Cantidad Disponible\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.existencia,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    })), props.touched.existencia && props.errors.existencia ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, props.errors.existencia)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"precio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, \"Precio\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"precio\",\n      type: \"number\",\n      placeholder: \"Precio Producto\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.precio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    })), props.touched.precio && props.errors.precio ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 23\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }\n    }, props.errors.precio)) : null, __jsx(\"input\", {\n      type: \"submit\",\n      className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n      value: \"Guardar Cambios\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }));\n  }))));\n};\n\nexport default EditarProducto;","map":{"version":3,"sources":["D:/Descargas/Crmcliente/Crmcliente/pages/editarproducto/[pid].js"],"names":["React","Layout","useRouter","gql","useQuery","useMutation","Formik","Yup","Swal","OBTENER_PRODUCTO","ACTUALIZAR_PRODUCTO","EditarProducto","router","query","id","data","loading","error","variables","actualizarProducto","schemaValidacion","object","nombre","string","required","existencia","number","positive","integer","precio","actualizarInfoProducto","valores","input","push","fire","console","log","obtenerProducto","props","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,WAAxB,QAA2C,gBAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,MAAMC,gBAAgB,GAAGN,GAAI;;;;;;;;CAA7B;AAUA,MAAMO,mBAAmB,GAAGP,GAAI;;;;;;;;;CAAhC;;AAWA,MAAMQ,cAAc,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AACJW,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFF,MAFJ;AAIA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bb,QAAQ,CAACK,gBAAD,EAAmB;AAC1DS,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AAD+C,GAAnB,CAAzC;AAMA,QAAM,CAACK,kBAAD,IAAuBd,WAAW,CAACK,mBAAD,CAAxC;AAEA,QAAMU,gBAAgB,GAAGb,GAAG,CAACc,MAAJ,CAAW;AAClCC,IAAAA,MAAM,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,uCAAtB,CAD0B;AAElCC,IAAAA,UAAU,EAAElB,GAAG,CAACmB,MAAJ,GACTF,QADS,CACA,+BADA,EAETG,QAFS,CAEA,iCAFA,EAGTC,OAHS,CAGD,yCAHC,CAFsB;AAMlCC,IAAAA,MAAM,EAAEtB,GAAG,CAACmB,MAAJ,GACLF,QADK,CACI,0BADJ,EAELG,QAFK,CAEI,iCAFJ;AAN0B,GAAX,CAAzB;;AAWA,MAAIX,OAAJ,EAAa;AACX,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,4CADZ;AAEE,MAAA,OAAO,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE;AACE,MAAA,SAAS,EAAC,6JADZ;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,EAiBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,4CADZ;AAEE,MAAA,OAAO,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAQE;AACE,MAAA,SAAS,EAAC,6JADZ;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAjBF,EAiCE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,4CADZ;AAEE,MAAA,OAAO,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE;AACE,MAAA,SAAS,EAAC,6JADZ;AAEE,MAAA,EAAE,EAAC,SAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAjCF,CADF,SADF,CAHF,CADF;AA4DD;;AACD,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,qBAAP;AACD;;AAED,QAAMe,sBAAsB,GAAG,MAAOC,OAAP,IAAmB;AAChD,UAAM;AAAET,MAAAA,MAAF;AAAUG,MAAAA,UAAV;AAAsBI,MAAAA;AAAtB,QAAiCE,OAAvC;;AACA,QAAI;AACF,YAAM;AAAEhB,QAAAA;AAAF,UAAW,MAAMI,kBAAkB,CAAC;AACxCD,QAAAA,SAAS,EAAE;AACTJ,UAAAA,EADS;AAETkB,UAAAA,KAAK,EAAE;AACLV,YAAAA,MADK;AAELG,YAAAA,UAFK;AAGLI,YAAAA;AAHK;AAFE;AAD6B,OAAD,CAAzC;AAWAjB,MAAAA,MAAM,CAACqB,IAAP,CAAY,YAAZ;AAEAzB,MAAAA,IAAI,CAAC0B,IAAL,CACE,UADF,EAEE,wCAFF,EAGE,SAHF;AAKD,KAnBD,CAmBE,OAAOjB,KAAP,EAAc;AACdkB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACD;AACF,GAxBD;;AA0BA,QAAM;AAAEoB,IAAAA;AAAF,MAAsBtB,IAA5B;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,kBAAkB,MADpB;AAEE,IAAA,aAAa,EAAEsB,eAFjB;AAGE,IAAA,gBAAgB,EAAEjB,gBAHpB;AAIE,IAAA,QAAQ,EAAGW,OAAD,IAAa;AACrBD,MAAAA,sBAAsB,CAACC,OAAD,CAAtB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQIO,KAAD,IAAW;AACV,WACE;AACE,MAAA,SAAS,EAAC,wCADZ;AAEE,MAAA,QAAQ,EAAEA,KAAK,CAACC,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,4CADZ;AAEE,MAAA,OAAO,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE;AACE,MAAA,SAAS,EAAC,4HADZ;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,iBAJd;AAKE,MAAA,QAAQ,EAAED,KAAK,CAACE,YALlB;AAME,MAAA,MAAM,EAAEF,KAAK,CAACG,UANhB;AAOE,MAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAapB,MAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAJF,EAuBGgB,KAAK,CAACK,OAAN,CAAcrB,MAAd,IAAwBgB,KAAK,CAACM,MAAN,CAAatB,MAArC,GACC;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIgB,KAAK,CAACM,MAAN,CAAatB,MAAjB,CAFF,CADD,GAKG,IA5BN,EA8BE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,4CADZ;AAEE,MAAA,OAAO,EAAC,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAQE;AACE,MAAA,SAAS,EAAC,4HADZ;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,WAAW,EAAC,qBAJd;AAKE,MAAA,QAAQ,EAAEgB,KAAK,CAACE,YALlB;AAME,MAAA,MAAM,EAAEF,KAAK,CAACG,UANhB;AAOE,MAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAajB,UAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CA9BF,EAiDGa,KAAK,CAACK,OAAN,CAAclB,UAAd,IAA4Ba,KAAK,CAACM,MAAN,CAAanB,UAAzC,GACC;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIa,KAAK,CAACM,MAAN,CAAanB,UAAjB,CAFF,CADD,GAKG,IAtDN,EAwDE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,4CADZ;AAEE,MAAA,OAAO,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE;AACE,MAAA,SAAS,EAAC,4HADZ;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,WAAW,EAAC,iBAJd;AAKE,MAAA,QAAQ,EAAEa,KAAK,CAACE,YALlB;AAME,MAAA,MAAM,EAAEF,KAAK,CAACG,UANhB;AAOE,MAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAab,MAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAxDF,EA2EGS,KAAK,CAACK,OAAN,CAAcd,MAAd,IAAwBS,KAAK,CAACM,MAAN,CAAaf,MAArC,GACC;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIS,KAAK,CAACM,MAAN,CAAaf,MAAjB,CAFF,CADD,GAKG,IAhFN,EAkFE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,8EAFZ;AAGE,MAAA,KAAK,EAAC,iBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlFF,CADF;AA0FD,GAnGH,CADF,CADF,CAHF,CADF;AA+GD,CAtOD;;AAwOA,eAAelB,cAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\n\nconst OBTENER_PRODUCTO = gql`\n  query obtenerProducto($id: ID!) {\n    obtenerProducto(id: $id) {\n      nombre\n      precio\n      existencia\n    }\n  }\n`;\n\nconst ACTUALIZAR_PRODUCTO = gql`\n  mutation actualizarProducto($id: ID!, $input: ProductoInput) {\n    actualizarProducto(id: $id, input: $input) {\n      id\n      nombre\n      existencia\n      precio\n    }\n  }\n`;\n\nconst EditarProducto = () => {\n  const router = useRouter();\n  const {\n    query: { id },\n  } = router;\n\n  const { data, loading, error } = useQuery(OBTENER_PRODUCTO, {\n    variables: {\n      id,\n    },\n  });\n\n  const [actualizarProducto] = useMutation(ACTUALIZAR_PRODUCTO);\n\n  const schemaValidacion = Yup.object({\n    nombre: Yup.string().required(\"El nombre del producto es obligatorio\"),\n    existencia: Yup.number()\n      .required(\"Agrega la cantidad disponible\")\n      .positive(\"No se aceptan números negativos\")\n      .integer(\"La existencia deben ser números enteros\"),\n    precio: Yup.number()\n      .required(\"El precio es obligatorio\")\n      .positive(\"No se aceptan números negativos\"),\n  });\n\n  if (loading) {\n    return (\n      <Layout>\n        <h1 className=\"text-2xl text-gray-800 font-light\">Editar Producto</h1>\n\n        <div className=\" animate-pulse  flex justify-center mt-5\">\n          <div className=\"w-full max-w-lg\">\n            <form className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\">\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"nombre\"\n                >\n                  Nombre\n                </label>\n\n                <input\n                  className=\"h-4 bg-gray-400 rounded w-4/6 m-5shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"nombre\"\n                  type=\"text\"\n                  readOnly\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"cantidad\"\n                >\n                  Cantidad Disponible\n                </label>\n\n                <input\n                  className=\"h-4 bg-gray-400 rounded w-4/6 m-5shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"cantidad\"\n                  type=\"number\"\n                  readOnly\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"empresa\"\n                >\n                  Precio\n                </label>\n\n                <input\n                  className=\"h-4 bg-gray-400 rounded w-4/6 m-5shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"empresa\"\n                  type=\"text\"\n                  readOnly\n                />\n              </div>\n            </form>\n             \n          </div>\n        </div>\n      </Layout>\n    );\n  }\n  if (!data) {\n    return \"Acción no permitida\";\n  }\n\n  const actualizarInfoProducto = async (valores) => {\n    const { nombre, existencia, precio } = valores;\n    try {\n      const { data } = await actualizarProducto({\n        variables: {\n          id,\n          input: {\n            nombre,\n            existencia,\n            precio,\n          },\n        },\n      });\n\n      router.push(\"/productos\");\n\n      Swal.fire(\n        \"Correcto\",\n        \"El producto se actualizó correctamente\",\n        \"success\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const { obtenerProducto } = data;\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">Editar Producto</h1>\n\n      <div className=\"flex justify-center mt-5\">\n        <div className=\"w-full max-w-lg\">\n          <Formik\n            enableReinitialize\n            initialValues={obtenerProducto}\n            validationSchema={schemaValidacion}\n            onSubmit={(valores) => {\n              actualizarInfoProducto(valores);\n            }}\n          >\n            {(props) => {\n              return (\n                <form\n                  className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n                  onSubmit={props.handleSubmit}\n                >\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"nombre\"\n                    >\n                      Nombre\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"nombre\"\n                      type=\"text\"\n                      placeholder=\"Nombre Producto\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.nombre}\n                    />\n                  </div>\n\n                  {props.touched.nombre && props.errors.nombre ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.nombre}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"existencia\"\n                    >\n                      Cantidad Disponible\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"existencia\"\n                      type=\"number\"\n                      placeholder=\"Cantidad Disponible\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.existencia}\n                    />\n                  </div>\n\n                  {props.touched.existencia && props.errors.existencia ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.existencia}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"precio\"\n                    >\n                      Precio\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"precio\"\n                      type=\"number\"\n                      placeholder=\"Precio Producto\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.precio}\n                    />\n                  </div>\n\n                  {props.touched.precio && props.errors.precio ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.precio}</p>\n                    </div>\n                  ) : null}\n\n                  <input\n                    type=\"submit\"\n                    className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                    value=\"Guardar Cambios\"\n                  />\n                </form>\n              );\n            }}\n          </Formik>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default EditarProducto;\n"]},"metadata":{},"sourceType":"module"}