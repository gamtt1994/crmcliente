{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Descargas\\\\crmcliente\\\\crmcliente\\\\pages\\\\nuevopedido.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerPedidosVendedor {\\n    obtenerPedidosVendedor {\\n      id\\n      pedido {\\n        id\\n        cantidad\\n        nombre\\n      }\\n      cliente {\\n        id\\n        nombre\\n        apellido\\n        email\\n        telefono\\n      }\\n      vendedor\\n      total\\n      estado\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation nuevoPedido($input: PedidoInput) {\\n    nuevoPedido(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport AsignarCliente from \"../components/pedidos/AsignarCliente\";\nimport AsignarProductos from \"../components/pedidos/AsignarProductos\";\nimport ResumenPedido from \"../components/pedidos/ResumenPedido\";\nimport Total from \"../components/pedidos/Total\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Swal from \"sweetalert2\";\nimport PedidoContext from \"../context/pedidos/PedidoContext\";\nvar NUEVO_PEDIDO = gql(_templateObject());\nvar OBTENER_PEDIDOS = gql(_templateObject2());\n\nvar NuevoPedido = function NuevoPedido() {\n  var router = useRouter();\n\n  var _useState = useState(null),\n      mensaje = _useState[0],\n      setMensaje = _useState[1];\n\n  var pedidoContext = useContext(PedidoContext);\n  var cliente = pedidoContext.cliente,\n      productos = pedidoContext.productos,\n      total = pedidoContext.total;\n\n  var _useMutation = useMutation(NUEVO_PEDIDO, {\n    update: function update(cache, _ref) {\n      var nuevoPedido = _ref.data.nuevoPedido;\n\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      }),\n          obtenerPedidosVendedor = _cache$readQuery.obtenerPedidosVendedor;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: [].concat(_toConsumableArray(obtenerPedidosVendedor), [nuevoPedido])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoPedido = _useMutation2[0];\n\n  var validarPedido = function validarPedido() {\n    return !productos.every(function (producto) {\n      return producto.cantidad > 0;\n    }) || total === 0 || cliente.length === 0 ? \" opacity-50 cursor-not-allowed \" : \"\";\n  };\n\n  var crearNuevoPedido = function crearNuevoPedido() {\n    var id, pedido, _await$nuevoPedido, data;\n\n    return _regeneratorRuntime.async(function crearNuevoPedido$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = cliente.id;\n            pedido = productos.map(function (_ref2) {\n              var __typename = _ref2.__typename,\n                  existencia = _ref2.existencia,\n                  producto = _objectWithoutProperties(_ref2, [\"__typename\", \"existencia\"]);\n\n              return producto;\n            });\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(nuevoPedido({\n              variables: {\n                input: {\n                  cliente: id,\n                  total: total,\n                  pedido: pedido\n                }\n              }\n            }));\n\n          case 5:\n            _await$nuevoPedido = _context.sent;\n            data = _await$nuevoPedido.data;\n            router.push(\"/pedidos\");\n            Swal.fire(\"Correcto\", \"El pedido se registr√≥ correctamente\", \"success\");\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            setMensaje(_context.t0.message.replace(\"GraphQL error: \", \"\"));\n            setTimeout(function () {\n              setMensaje(null);\n            }, 3000);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]], Promise);\n  };\n\n  var mostrarMensaje = function mostrarMensaje() {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto \",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, mensaje, \" \"));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"Crear Nuevo Pedido\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(AsignarCliente, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), __jsx(AsignarProductos, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), __jsx(ResumenPedido, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), __jsx(Total, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \" bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 \".concat(validarPedido(), \" \"),\n    onClick: function onClick() {\n      return crearNuevoPedido();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Registrar Pedido\"))));\n};\n\nexport default NuevoPedido;","map":{"version":3,"sources":["D:/Descargas/crmcliente/crmcliente/pages/nuevopedido.js"],"names":["React","useContext","useState","Layout","AsignarCliente","AsignarProductos","ResumenPedido","Total","gql","useMutation","useRouter","Swal","PedidoContext","NUEVO_PEDIDO","OBTENER_PEDIDOS","NuevoPedido","router","mensaje","setMensaje","pedidoContext","cliente","productos","total","update","cache","nuevoPedido","data","readQuery","query","obtenerPedidosVendedor","writeQuery","validarPedido","every","producto","cantidad","length","crearNuevoPedido","id","pedido","map","__typename","existencia","variables","input","push","fire","message","replace","setTimeout","mostrarMensaje"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport AsignarCliente from \"../components/pedidos/AsignarCliente\";\nimport AsignarProductos from \"../components/pedidos/AsignarProductos\";\nimport ResumenPedido from \"../components/pedidos/ResumenPedido\";\nimport Total from \"../components/pedidos/Total\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Swal from \"sweetalert2\";\n\nimport PedidoContext from \"../context/pedidos/PedidoContext\";\n\nconst NUEVO_PEDIDO = gql`\n  mutation nuevoPedido($input: PedidoInput) {\n    nuevoPedido(input: $input) {\n      id\n    }\n  }\n`;\n\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n    obtenerPedidosVendedor {\n      id\n      pedido {\n        id\n        cantidad\n        nombre\n      }\n      cliente {\n        id\n        nombre\n        apellido\n        email\n        telefono\n      }\n      vendedor\n      total\n      estado\n    }\n  }\n`;\n\nconst NuevoPedido = () => {\n  const router = useRouter();\n\n  const [mensaje, setMensaje] = useState(null);\n\n  const pedidoContext = useContext(PedidoContext);\n  const { cliente, productos, total } = pedidoContext;\n\n  const [nuevoPedido] = useMutation(NUEVO_PEDIDO, {\n    update(cache, { data: { nuevoPedido } }) {\n      const { obtenerPedidosVendedor } = cache.readQuery({\n        query: OBTENER_PEDIDOS,\n      });\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: [...obtenerPedidosVendedor, nuevoPedido],\n        },\n      });\n    },\n  });\n\n  const validarPedido = () => {\n    return !productos.every((producto) => producto.cantidad > 0) ||\n      total === 0 ||\n      cliente.length === 0\n      ? \" opacity-50 cursor-not-allowed \"\n      : \"\";\n  };\n\n  const crearNuevoPedido = async () => {\n    const { id } = cliente;\n    const pedido = productos.map(\n      ({ __typename, existencia, ...producto }) => producto\n    );\n\n    try {\n      const { data } = await nuevoPedido({\n        variables: {\n          input: {\n            cliente: id,\n            total,\n            pedido,\n          },\n        },\n      });\n\n      router.push(\"/pedidos\");\n\n      Swal.fire(\"Correcto\", \"El pedido se registr√≥ correctamente\", \"success\");\n    } catch (error) {\n      setMensaje(error.message.replace(\"GraphQL error: \", \"\"));\n\n      setTimeout(() => {\n        setMensaje(null);\n      }, 3000);\n    }\n  };\n\n  const mostrarMensaje = () => {\n    return (\n      <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto \">\n        <p>{mensaje} </p>\n      </div>\n    );\n  };\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">Crear Nuevo Pedido</h1>\n\n      {mensaje && mostrarMensaje()}\n\n      <div className=\"flex justify-center mt-5\">\n        <div className=\"w-full max-w-lg\">\n          <AsignarCliente />\n          <AsignarProductos />\n          <ResumenPedido />\n          <Total />\n\n          <button\n            type=\"button\"\n            className={` bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900 ${validarPedido()} `}\n            onClick={() => crearNuevoPedido()}\n          >\n            Registrar Pedido\n          </button>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default NuevoPedido;\n"]},"metadata":{},"sourceType":"module"}