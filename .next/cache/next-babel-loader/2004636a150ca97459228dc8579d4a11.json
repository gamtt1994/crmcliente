{"ast":null,"code":"var _jsxFileName = \"D:\\\\Descargas\\\\Crmcliente\\\\Crmcliente\\\\pages\\\\editarcliente\\\\[pid].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\nconst OBTENER_CLIENTE = gql`\n  query obtenerCliente($id: ID!) {\n    obtenerCliente(id: $id) {\n      nombre\n      apellido\n      email\n      telefono\n      empresa\n    }\n  }\n`;\nconst ACTUALIZAR_CLIENTE = gql`\n  mutation actualizarCliente($id: ID!, $input: ClienteInput) {\n    actualizarCliente(id: $id, input: $input) {\n      nombre\n      email\n    }\n  }\n`;\n\nconst EditarCliente = () => {\n  const router = useRouter();\n  const {\n    query: {\n      id\n    }\n  } = router;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(OBTENER_CLIENTE, {\n    variables: {\n      id\n    }\n  });\n  const [actualizarCliente] = useMutation(ACTUALIZAR_CLIENTE);\n  const schemaValidacion = Yup.object({\n    nombre: Yup.string().required(\"El nombre del cliente es obligatorio\"),\n    apellido: Yup.string().required(\"El apellido del cliente es obligatorio\"),\n    empresa: Yup.string().required(\"El campo empresa  es obligatorio\"),\n    email: Yup.string().email(\"Email no válido\").required(\"El email del cliente es obligatorio\")\n  });\n  if (loading) return \"Cargando...\";\n  const {\n    obtenerCliente\n  } = data;\n\n  const actualizarInfoCliente = async valores => {\n    const {\n      nombre,\n      apellido,\n      empresa,\n      email,\n      telefono\n    } = valores;\n\n    try {\n      const {\n        data\n      } = await actualizarCliente({\n        variables: {\n          id,\n          input: {\n            nombre,\n            apellido,\n            empresa,\n            email,\n            telefono\n          }\n        }\n      });\n      Swal.fire(\"Actualizado\", \"El cliente se actualizó correctamente\", \"success\");\n      router.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Editar Cliente\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    validationSchema: schemaValidacion,\n    enableReinitialize: true,\n    initialValues: obtenerCliente,\n    onSubmit: valores => {\n      actualizarInfoCliente(valores);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, props => {\n    return __jsx(\"form\", {\n      className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n      onSubmit: props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Nombre\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"nombre\",\n      type: \"text\",\n      placeholder: \"Nombre Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.nombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    })), props.touched.nombre && props.errors.nombre ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }\n    }, props.errors.nombre)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"apellido\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Apellido\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"apellido\",\n      type: \"text\",\n      placeholder: \"Apellido Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.apellido,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    })), props.touched.apellido && props.errors.apellido ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    }, props.errors.apellido)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"empresa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Empresa\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"empresa\",\n      type: \"text\",\n      placeholder: \"Empresa Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.empresa,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    })), props.touched.empresa && props.errors.empresa ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, props.errors.empresa)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"email\",\n      type: \"email\",\n      placeholder: \"Email Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    })), props.touched.email && props.errors.email ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 23\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 23\n      }\n    }, props.errors.email)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"telefono\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, \"Tel\\xE9fono\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"telefono\",\n      type: \"tel\",\n      placeholder: \"Tel\\xE9fono Cliente\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.telefono,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    })), __jsx(\"input\", {\n      type: \"submit\",\n      className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n      value: \"Editar Cliente\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }));\n  }), \"\\xA0\")));\n};\n\nexport default EditarCliente;","map":{"version":3,"sources":["D:/Descargas/Crmcliente/Crmcliente/pages/editarcliente/[pid].js"],"names":["React","useRouter","Layout","useQuery","gql","useMutation","Formik","Yup","Swal","OBTENER_CLIENTE","ACTUALIZAR_CLIENTE","EditarCliente","router","query","id","data","loading","error","variables","actualizarCliente","schemaValidacion","object","nombre","string","required","apellido","empresa","email","obtenerCliente","actualizarInfoCliente","valores","telefono","input","fire","push","console","log","props","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\n\nconst OBTENER_CLIENTE = gql`\n  query obtenerCliente($id: ID!) {\n    obtenerCliente(id: $id) {\n      nombre\n      apellido\n      email\n      telefono\n      empresa\n    }\n  }\n`;\n\nconst ACTUALIZAR_CLIENTE = gql`\n  mutation actualizarCliente($id: ID!, $input: ClienteInput) {\n    actualizarCliente(id: $id, input: $input) {\n      nombre\n      email\n    }\n  }\n`;\n\nconst EditarCliente = () => {\n  const router = useRouter();\n  const {\n    query: { id },\n  } = router;\n\n  const { data, loading, error } = useQuery(OBTENER_CLIENTE, {\n    variables: {\n      id,\n    },\n  });\n\n  const [actualizarCliente] = useMutation(ACTUALIZAR_CLIENTE);\n\n  const schemaValidacion = Yup.object({\n    nombre: Yup.string().required(\"El nombre del cliente es obligatorio\"),\n    apellido: Yup.string().required(\"El apellido del cliente es obligatorio\"),\n    empresa: Yup.string().required(\"El campo empresa  es obligatorio\"),\n    email: Yup.string()\n      .email(\"Email no válido\")\n      .required(\"El email del cliente es obligatorio\"),\n  });\n\n  if (loading) return \"Cargando...\";\n\n  const { obtenerCliente } = data;\n\n  const actualizarInfoCliente = async (valores) => {\n    const { nombre, apellido, empresa, email, telefono } = valores;\n\n    try {\n      const { data } = await actualizarCliente({\n        variables: {\n          id,\n          input: {\n            nombre,\n            apellido,\n            empresa,\n            email,\n            telefono,\n          },\n        },\n      });\n\n      Swal.fire(\n        \"Actualizado\",\n        \"El cliente se actualizó correctamente\",\n        \"success\"\n      );\n\n      router.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">Editar Cliente</h1>\n\n      <div className=\"flex justify-center mt-5\">\n        <div className=\"w-full max-w-lg\">\n          <Formik\n            validationSchema={schemaValidacion}\n            enableReinitialize\n            initialValues={obtenerCliente}\n            onSubmit={(valores) => {\n              actualizarInfoCliente(valores);\n            }}\n          >\n            {(props) => {\n              return (\n                <form\n                  className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n                  onSubmit={props.handleSubmit}\n                >\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"nombre\"\n                    >\n                      Nombre\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"nombre\"\n                      type=\"text\"\n                      placeholder=\"Nombre Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.nombre}\n                    />\n                  </div>\n\n                  {props.touched.nombre && props.errors.nombre ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.nombre}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"apellido\"\n                    >\n                      Apellido\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"apellido\"\n                      type=\"text\"\n                      placeholder=\"Apellido Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.apellido}\n                    />\n                  </div>\n\n                  {props.touched.apellido && props.errors.apellido ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.apellido}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"empresa\"\n                    >\n                      Empresa\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"empresa\"\n                      type=\"text\"\n                      placeholder=\"Empresa Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.empresa}\n                    />\n                  </div>\n\n                  {props.touched.empresa && props.errors.empresa ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.empresa}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"Email Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.email}\n                    />\n                  </div>\n\n                  {props.touched.email && props.errors.email ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.email}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"telefono\"\n                    >\n                      Teléfono\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"telefono\"\n                      type=\"tel\"\n                      placeholder=\"Teléfono Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.telefono}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                    value=\"Editar Cliente\"\n                  />\n                </form>\n              );\n            }}\n          </Formik>\n           \n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default EditarCliente;\n"]},"metadata":{},"sourceType":"module"}