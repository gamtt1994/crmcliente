{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport fetch from \"node-fetch\";\nimport { setContext } from \"apollo-link-context\";\nvar httpLink = createHttpLink({\n  uri: \"https://pure-stream-92062.herokuapp.com/\",\n  https: fetch\n});\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  // Leer el storage almacenado\n  var token = localStorage.getItem(\"token\"); // console.log(token);\n\n  return {\n    headers: _objectSpread({}, headers, {\n      authorization: token ? \"Bearer \".concat(token) : \"\"\n    })\n  };\n});\nvar client = new ApolloClient({\n  connectToDevTools: true,\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\nexport default client;","map":{"version":3,"sources":["D:/Descargas/crmcliente/crmcliente/config/apollo.js"],"names":["ApolloClient","createHttpLink","InMemoryCache","fetch","setContext","httpLink","uri","https","authLink","_","headers","token","localStorage","getItem","authorization","client","connectToDevTools","cache","link","concat"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,IAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAC9BK,EAAAA,GAAG,EAAE,0CADyB;AAG9BC,EAAAA,KAAK,EAAEJ;AAHuB,CAAD,CAA/B;AAMA,IAAMK,QAAQ,GAAGJ,UAAU,CAAC,UAACK,CAAD,QAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9C;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAF8C,CAG9C;;AAEA,SAAO;AACLH,IAAAA,OAAO,oBACFA,OADE;AAELI,MAAAA,aAAa,EAAEH,KAAK,oBAAaA,KAAb,IAAuB;AAFtC;AADF,GAAP;AAMD,CAX0B,CAA3B;AAaA,IAAMI,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC9BgB,EAAAA,iBAAiB,EAAE,IADW;AAE9BC,EAAAA,KAAK,EAAE,IAAIf,aAAJ,EAFuB;AAG9BgB,EAAAA,IAAI,EAAEV,QAAQ,CAACW,MAAT,CAAgBd,QAAhB;AAHwB,CAAjB,CAAf;AAMA,eAAeU,MAAf","sourcesContent":["import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport fetch from \"node-fetch\";\nimport { setContext } from \"apollo-link-context\";\n\nconst httpLink = createHttpLink({\n  uri: \"https://pure-stream-92062.herokuapp.com/\",\n\n  https: fetch,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // Leer el storage almacenado\n  const token = localStorage.getItem(\"token\");\n  // console.log(token);\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  connectToDevTools: true,\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink),\n});\n\nexport default client;\n"]},"metadata":{},"sourceType":"module"}