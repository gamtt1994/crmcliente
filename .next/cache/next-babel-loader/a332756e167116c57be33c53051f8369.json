{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Descargas\\\\crmcliente\\\\crmcliente\\\\components\\\\Pedido.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query obtenerPedidosVendedor {\\n    obtenerPedidosVendedor {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation eliminarPedido($id: ID!) {\\n    eliminarPedido(id: $id)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation actualizarPedido($id: ID!, $input: PedidoInput) {\\n    actualizarPedido(id: $id, input: $input) {\\n      estado\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Swal from \"sweetalert2\";\nvar ACTUALIZAR_PEDIDO = gql(_templateObject());\nvar ELIMINAR_PEDIDO = gql(_templateObject2());\nvar OBTENER_PEDIDOS = gql(_templateObject3());\n\nvar Pedido = function Pedido(_ref) {\n  var pedido = _ref.pedido;\n  var id = pedido.id,\n      total = pedido.total,\n      _pedido$cliente = pedido.cliente,\n      nombre = _pedido$cliente.nombre,\n      apellido = _pedido$cliente.apellido,\n      telefono = _pedido$cliente.telefono,\n      email = _pedido$cliente.email,\n      estado = pedido.estado,\n      cliente = pedido.cliente;\n\n  var _useMutation = useMutation(ACTUALIZAR_PEDIDO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarPedido = _useMutation2[0];\n\n  var _useMutation3 = useMutation(ELIMINAR_PEDIDO, {\n    update: function update(cache) {\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      }),\n          obtenerPedidosVendedor = _cache$readQuery.obtenerPedidosVendedor;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: obtenerPedidosVendedor.filter(function (pedido) {\n            return pedido.id !== id;\n          })\n        }\n      });\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      eliminarPedido = _useMutation4[0];\n\n  var _useState = useState(estado),\n      estadoPedido = _useState[0],\n      setEstadoPedido = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      clase = _useState2[0],\n      setClase = _useState2[1];\n\n  useEffect(function () {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n\n    clasePedido();\n  }, [estadoPedido]);\n\n  var clasePedido = function clasePedido() {\n    if (estadoPedido === \"PENDIENTE\") {\n      setClase(\"border-yellow-500\");\n    } else if (estadoPedido === \"COMPLETADO\") {\n      setClase(\"border-green-500\");\n    } else {\n      setClase(\"border-red-800\");\n    }\n  };\n\n  var cambiarEstadoPedido = function cambiarEstadoPedido(nuevoEstado) {\n    var _await$actualizarPedi, data;\n\n    return _regeneratorRuntime.async(function cambiarEstadoPedido$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(actualizarPedido({\n              variables: {\n                id: id,\n                input: {\n                  estado: nuevoEstado,\n                  cliente: cliente.id\n                }\n              }\n            }));\n\n          case 3:\n            _await$actualizarPedi = _context.sent;\n            data = _await$actualizarPedi.data;\n            setEstadoPedido(data.actualizarPedido.estado);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var confirmarEliminarPedido = function confirmarEliminarPedido() {\n    Swal.fire({\n      title: \"¿Deseas eliminar a este pedido?\",\n      text: \"Esta acción no se puede deshacer\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Si, Eliminar\",\n      cancelButtonText: \"No, Cancelar\"\n    }).then(function _callee(result) {\n      var data;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!result.value) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(eliminarPedido({\n                variables: {\n                  id: id\n                }\n              }));\n\n            case 4:\n              data = _context2.sent;\n              Swal.fire(\"Eliminado\", data.eliminarPedido, \"success\");\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \" \".concat(clase, \" border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-gray-800\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Cliente: \", nombre, \" \", apellido, \" \"), email && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  })), email), telefono && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  })), telefono), __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Estado Pedido:\"), __jsx(\"select\", {\n    className: \"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \",\n    value: estadoPedido,\n    onChange: function onChange(e) {\n      return cambiarEstadoPedido(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, __jsx(\"option\", {\n    value: \"COMPLETADO\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"COMPLETADO\"), __jsx(\"option\", {\n    value: \"PENDIENTE\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"PENDIENTE\"), __jsx(\"option\", {\n    value: \"CANCELADO\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"CANCELADO\"))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Resumen del Pedido\"), pedido.pedido.map(function (articulo) {\n    return __jsx(\"div\", {\n      key: articulo.id,\n      className: \"mt-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"text-sm text-gray-600\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, \"Producto: \", articulo.nombre, \" \"), __jsx(\"p\", {\n      className: \"text-sm text-gray-600\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, \"Cantidad: \", articulo.cantidad, \" \"));\n  }), __jsx(\"p\", {\n    className: \"text-gray-800 mt-3 font-bold \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"Total a pagar:\", __jsx(\"span\", {\n    className: \"font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \" $ \", total)), __jsx(\"button\", {\n    className: \"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\",\n    onClick: function onClick() {\n      return confirmarEliminarPedido();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, \"Eliminar Pedido\", __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 ml-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, __jsx(\"path\", {\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Pedido;","map":{"version":3,"sources":["D:/Descargas/crmcliente/crmcliente/components/Pedido.js"],"names":["React","useState","useEffect","gql","useMutation","Swal","ACTUALIZAR_PEDIDO","ELIMINAR_PEDIDO","OBTENER_PEDIDOS","Pedido","pedido","id","total","cliente","nombre","apellido","telefono","email","estado","actualizarPedido","update","cache","readQuery","query","obtenerPedidosVendedor","writeQuery","data","filter","eliminarPedido","estadoPedido","setEstadoPedido","clase","setClase","clasePedido","cambiarEstadoPedido","nuevoEstado","variables","input","console","log","confirmarEliminarPedido","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","e","target","map","articulo","cantidad"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Swal from \"sweetalert2\";\n\nconst ACTUALIZAR_PEDIDO = gql`\n  mutation actualizarPedido($id: ID!, $input: PedidoInput) {\n    actualizarPedido(id: $id, input: $input) {\n      estado\n    }\n  }\n`;\nconst ELIMINAR_PEDIDO = gql`\n  mutation eliminarPedido($id: ID!) {\n    eliminarPedido(id: $id)\n  }\n`;\n\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n    obtenerPedidosVendedor {\n      id\n    }\n  }\n`;\n\nconst Pedido = ({ pedido }) => {\n  const {\n    id,\n    total,\n    cliente: { nombre, apellido, telefono, email },\n    estado,\n    cliente,\n  } = pedido;\n\n  const [actualizarPedido] = useMutation(ACTUALIZAR_PEDIDO);\n  const [eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\n    update(cache) {\n      const { obtenerPedidosVendedor } = cache.readQuery({\n        query: OBTENER_PEDIDOS,\n      });\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: obtenerPedidosVendedor.filter(\n            (pedido) => pedido.id !== id\n          ),\n        },\n      });\n    },\n  });\n\n  const [estadoPedido, setEstadoPedido] = useState(estado);\n  const [clase, setClase] = useState(\"\");\n\n  useEffect(() => {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n    clasePedido();\n  }, [estadoPedido]);\n\n  const clasePedido = () => {\n    if (estadoPedido === \"PENDIENTE\") {\n      setClase(\"border-yellow-500\");\n    } else if (estadoPedido === \"COMPLETADO\") {\n      setClase(\"border-green-500\");\n    } else {\n      setClase(\"border-red-800\");\n    }\n  };\n\n  const cambiarEstadoPedido = async (nuevoEstado) => {\n    try {\n      const { data } = await actualizarPedido({\n        variables: {\n          id,\n          input: {\n            estado: nuevoEstado,\n            cliente: cliente.id,\n          },\n        },\n      });\n\n      setEstadoPedido(data.actualizarPedido.estado);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const confirmarEliminarPedido = () => {\n    Swal.fire({\n      title: \"¿Deseas eliminar a este pedido?\",\n      text: \"Esta acción no se puede deshacer\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Si, Eliminar\",\n      cancelButtonText: \"No, Cancelar\",\n    }).then(async (result) => {\n      if (result.value) {\n        try {\n          const data = await eliminarPedido({\n            variables: {\n              id,\n            },\n          });\n\n          Swal.fire(\"Eliminado\", data.eliminarPedido, \"success\");\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  };\n\n  return (\n    <div\n      className={` ${clase} border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg`}\n    >\n      <div>\n        <p className=\"font-bold text-gray-800\">\n          Cliente: {nombre} {apellido}{\" \"}\n        </p>\n\n        {email && (\n          <p className=\"flex items-center my-2\">\n            <svg\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              viewBox=\"0 0 24 24\"\n              className=\"w-4 h-4 mr-2\"\n            >\n              <path d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n            </svg>\n            {email}\n          </p>\n        )}\n\n        {telefono && (\n          <p className=\"flex items-center my-2\">\n            <svg\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              viewBox=\"0 0 24 24\"\n              className=\"w-4 h-4 mr-2\"\n            >\n              <path d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\n            </svg>\n            {telefono}\n          </p>\n        )}\n\n        <h2 className=\"text-gray-800 font-bold mt-10\">Estado Pedido:</h2>\n\n        <select\n          className=\"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \"\n          value={estadoPedido}\n          onChange={(e) => cambiarEstadoPedido(e.target.value)}\n        >\n          <option value=\"COMPLETADO\">COMPLETADO</option>\n          <option value=\"PENDIENTE\">PENDIENTE</option>\n          <option value=\"CANCELADO\">CANCELADO</option>\n        </select>\n      </div>\n\n      <div>\n        <h2 className=\"text-gray-800 font-bold mt-2\">Resumen del Pedido</h2>\n        {pedido.pedido.map((articulo) => (\n          <div key={articulo.id} className=\"mt-4\">\n            <p className=\"text-sm text-gray-600\">\n              Producto: {articulo.nombre}{\" \"}\n            </p>\n            <p className=\"text-sm text-gray-600\">\n              Cantidad: {articulo.cantidad}{\" \"}\n            </p>\n          </div>\n        ))}\n\n        <p className=\"text-gray-800 mt-3 font-bold \">\n          Total a pagar:\n          <span className=\"font-light\"> $ {total}</span>\n        </p>\n\n        <button\n          className=\"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\"\n          onClick={() => confirmarEliminarPedido()}\n        >\n          Eliminar Pedido\n          <svg\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            className=\"w-4 h-4 ml-2\"\n          >\n            <path d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Pedido;\n"]},"metadata":{},"sourceType":"module"}