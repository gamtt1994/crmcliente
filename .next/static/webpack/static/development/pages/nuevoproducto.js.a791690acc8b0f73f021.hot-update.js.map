{"version":3,"file":"static/webpack/static\\development\\pages\\nuevoproducto.js.a791690acc8b0f73f021.hot-update.js","sources":["webpack:///./pages/nuevoproducto.js"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Swal from \"sweetalert2\";\nimport { useRouter } from \"next/router\";\n\nconst NUEVO_PRODUCTO = gql`\n  mutation nuevoProducto($input: ProductoInput) {\n    nuevoProducto(input: $input) {\n      id\n      nombre\n      existencia\n      precio\n    }\n  }\n`;\n\nconst OBTENER_PRODUCTOS = gql`\n  query obtenerProductos {\n    obtenerProductos {\n      id\n      nombre\n      precio\n      existencia\n    }\n  }\n`;\n\nconst NuevoProducto = () => {\n  const router = useRouter();\n\n  const [nuevoProducto] = useMutation(NUEVO_PRODUCTO, {\n    update(cache, { data: { nuevoProducto } }) {\n      const { obtenerProductos } = cache.readQuery({\n        query: OBTENER_PRODUCTOS,\n      });\n      cache.writeQuery({\n        query: OBTENER_PRODUCTOS,\n        data: {\n          obtenerProductos: [...obtenerProductos, nuevoProducto],\n        },\n      });\n    },\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      nombre: \"\",\n      existencia: \"\",\n      precio: \"\",\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required(\"El nombre del producto es obligatorio\"),\n      existencia: Yup.number()\n        .required(\"Agrega la cantidad disponible\")\n        .positive(\"No se aceptan números negativos\")\n        .integer(\"La existencia deben ser números enteros\"),\n      precio: Yup.number()\n        .required(\"El precio es obligatorio\")\n        .positive(\"No se aceptan números negativos\"),\n    }),\n    onSubmit: async (valores) => {\n      const { nombre, existencia, precio } = valores;\n\n      try {\n        const { data } = await nuevoProducto({\n          variables: {\n            input: {\n              nombre,\n              existencia,\n              precio,\n            },\n          },\n        });\n        Swal.fire(\"Creado\", \"Se creó el producto correctamente\", \"success\");\n        router.push(\"/productos\");\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  });\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">\n        Crear Nuevo Producto\n      </h1>\n\n      <div className=\"flex justify-center mt-5\">\n        <div className=\"w-full max-w-lg\">\n          <form\n            className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n            onSubmit={formik.handleSubmit}\n          >\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"nombre\"\n              >\n                Nombre\n              </label>\n\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"nombre\"\n                type=\"text\"\n                placeholder=\"Nombre Producto\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.nombre}\n              />\n            </div>\n\n            {formik.touched.nombre && formik.errors.nombre ? (\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                <p className=\"font-bold\">Error</p>\n                <p>{formik.errors.nombre}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"existencia\"\n              >\n                Cantidad Disponible\n              </label>\n\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"existencia\"\n                type=\"number\"\n                placeholder=\"Cantidad Disponible\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.existencia}\n              />\n            </div>\n\n            {formik.touched.existencia && formik.errors.existencia ? (\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                <p className=\"font-bold\">Error</p>\n                <p>{formik.errors.existencia}</p>\n              </div>\n            ) : null}\n\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"precio\"\n              >\n                Precio\n              </label>\n\n              <input\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"precio\"\n                type=\"number\"\n                placeholder=\"Precio Producto\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.precio}\n              />\n            </div>\n\n            {formik.touched.precio && formik.errors.precio ? (\n              <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                <p className=\"font-bold\">Error</p>\n                <p>{formik.errors.precio}</p>\n              </div>\n            ) : null}\n\n            <input\n              type=\"submit\"\n              className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n              value=\"Agregar Nuevo Producto\"\n            />\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default NuevoProducto;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;AACA;AAUA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AADA;AAEA;AADA;AADA;AACA;AAGA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAXA;AAHA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAIA;AANA;AAUA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAHA;AADA;AADA;AACA;AALA;AAAA;AAIA;AASA;AACA;AAdA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAqCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}