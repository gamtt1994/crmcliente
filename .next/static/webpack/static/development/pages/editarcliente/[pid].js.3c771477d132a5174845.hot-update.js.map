{"version":3,"file":"static/webpack/static\\development\\pages\\editarcliente\\[pid].js.3c771477d132a5174845.hot-update.js","sources":["webpack:///./pages/editarcliente/[pid].js"],"sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/layout\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Swal from \"sweetalert2\";\n\nconst OBTENER_CLIENTE = gql`\n  query obtenerCliente($id: ID!) {\n    obtenerCliente(id: $id) {\n      nombre\n      apellido\n      email\n      telefono\n      empresa\n    }\n  }\n`;\n\nconst ACTUALIZAR_CLIENTE = gql`\n  mutation actualizarCliente($id: ID!, $input: ClienteInput) {\n    actualizarCliente(id: $id, input: $input) {\n      nombre\n      email\n    }\n  }\n`;\n\nconst EditarCliente = () => {\n  const router = useRouter();\n  const {\n    query: { id },\n  } = router;\n\n  const { data, loading, error } = useQuery(OBTENER_CLIENTE, {\n    variables: {\n      id,\n    },\n  });\n\n  const [actualizarCliente] = useMutation(ACTUALIZAR_CLIENTE);\n\n  const schemaValidacion = Yup.object({\n    nombre: Yup.string().required(\"El nombre del cliente es obligatorio\"),\n    apellido: Yup.string().required(\"El apellido del cliente es obligatorio\"),\n    empresa: Yup.string().required(\"El campo empresa  es obligatorio\"),\n    email: Yup.string()\n      .email(\"Email no válido\")\n      .required(\"El email del cliente es obligatorio\"),\n  });\n\n  if (loading) {\n    return (\n      <Layout>\n        <h1 className=\"text-2xl text-gray-800 font-light\">Editar Cliente</h1>\n\n        <div className=\" animate-pulse  flex justify-center mt-5\">\n          <div className=\"w-full max-w-lg\">\n            <form className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\">\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"nombre\"\n                >\n                  Nombre\n                </label>\n\n                <input\n                  className=\"h-4 bg-gray-400 rounded w-4/6 m-5shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"nombre\"\n                  type=\"text\"\n                  placeholder=\"Nombre Cliente\"\n                  readOnly\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"apellido\"\n                >\n                  Apellido\n                </label>\n\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"apellido\"\n                  type=\"text\"\n                  placeholder=\"Apellido Cliente\"\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"empresa\"\n                >\n                  Empresa\n                </label>\n\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"empresa\"\n                  type=\"text\"\n                  placeholder=\"Empresa Cliente\"\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"email\"\n                >\n                  Email\n                </label>\n\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email Cliente\"\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <label\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\n                  htmlFor=\"telefono\"\n                >\n                  Teléfono\n                </label>\n\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"telefono\"\n                  type=\"tel\"\n                  placeholder=\"Teléfono Cliente\"\n                />\n              </div>\n\n              <input\n                type=\"submit\"\n                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                value=\"Editar Cliente\"\n              />\n            </form>\n             \n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  const { obtenerCliente } = data;\n\n  const actualizarInfoCliente = async (valores) => {\n    const { nombre, apellido, empresa, email, telefono } = valores;\n\n    try {\n      const { data } = await actualizarCliente({\n        variables: {\n          id,\n          input: {\n            nombre,\n            apellido,\n            empresa,\n            email,\n            telefono,\n          },\n        },\n      });\n\n      Swal.fire(\n        \"Actualizado\",\n        \"El cliente se actualizó correctamente\",\n        \"success\"\n      );\n\n      router.push(\"/clientes\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Layout>\n      <h1 className=\"text-2xl text-gray-800 font-light\">Editar Cliente</h1>\n\n      <div className=\"flex justify-center mt-5\">\n        <div className=\"w-full max-w-lg\">\n          <Formik\n            validationSchema={schemaValidacion}\n            enableReinitialize\n            initialValues={obtenerCliente}\n            onSubmit={(valores) => {\n              actualizarInfoCliente(valores);\n            }}\n          >\n            {(props) => {\n              return (\n                <form\n                  className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n                  onSubmit={props.handleSubmit}\n                >\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"nombre\"\n                    >\n                      Nombre\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"nombre\"\n                      type=\"text\"\n                      placeholder=\"Nombre Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.nombre}\n                    />\n                  </div>\n\n                  {props.touched.nombre && props.errors.nombre ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.nombre}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"apellido\"\n                    >\n                      Apellido\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"apellido\"\n                      type=\"text\"\n                      placeholder=\"Apellido Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.apellido}\n                    />\n                  </div>\n\n                  {props.touched.apellido && props.errors.apellido ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.apellido}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"empresa\"\n                    >\n                      Empresa\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"empresa\"\n                      type=\"text\"\n                      placeholder=\"Empresa Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.empresa}\n                    />\n                  </div>\n\n                  {props.touched.empresa && props.errors.empresa ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.empresa}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"Email Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.email}\n                    />\n                  </div>\n\n                  {props.touched.email && props.errors.email ? (\n                    <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\n                      <p className=\"font-bold\">Error</p>\n                      <p>{props.errors.email}</p>\n                    </div>\n                  ) : null}\n\n                  <div className=\"mb-4\">\n                    <label\n                      className=\"block text-gray-700 text-sm font-bold mb-2\"\n                      htmlFor=\"telefono\"\n                    >\n                      Teléfono\n                    </label>\n\n                    <input\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                      id=\"telefono\"\n                      type=\"tel\"\n                      placeholder=\"Teléfono Cliente\"\n                      onChange={props.handleChange}\n                      onBlur={props.handleBlur}\n                      value={props.values.telefono}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                    value=\"Editar Cliente\"\n                  />\n                </form>\n              );\n            }}\n          </Formik>\n           \n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default EditarCliente;\n"],"mappings":"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","sourceRoot":""}